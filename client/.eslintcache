[{"/home/mmx/Downloads/TEST/talk/client/src/index.tsx":"1","/home/mmx/Downloads/TEST/talk/client/src/redux/auth-reducer.ts":"2","/home/mmx/Downloads/TEST/talk/client/src/redux/app-reducer.ts":"3","/home/mmx/Downloads/TEST/talk/client/src/App.tsx":"4","/home/mmx/Downloads/TEST/talk/client/src/views/AuthView/index.tsx":"5","/home/mmx/Downloads/TEST/talk/client/src/views/AppView/index.tsx":"6","/home/mmx/Downloads/TEST/talk/client/src/components/Auth/Welcome/index.tsx":"7","/home/mmx/Downloads/TEST/talk/client/src/components/Main/Messages/index.tsx":"8","/home/mmx/Downloads/TEST/talk/client/src/components/Auth/Signup/index.tsx":"9","/home/mmx/Downloads/TEST/talk/client/src/components/Main/MsgInput/index.tsx":"10","/home/mmx/Downloads/TEST/talk/client/src/components/Main/TopBar/index.tsx":"11","/home/mmx/Downloads/TEST/talk/client/src/components/Auth/Login/index.tsx":"12","/home/mmx/Downloads/TEST/talk/client/src/components/Main/Onboard/index.tsx":"13","/home/mmx/Downloads/TEST/talk/client/src/components/Side/TopBar/index.tsx":"14","/home/mmx/Downloads/TEST/talk/client/src/components/Side/BottomBar/index.tsx":"15","/home/mmx/Downloads/TEST/talk/client/src/components/Side/GroupInfo/index.tsx":"16","/home/mmx/Downloads/TEST/talk/client/src/components/Side/Search/index.tsx":"17","/home/mmx/Downloads/TEST/talk/client/src/components/Side/Members/index.tsx":"18","/home/mmx/Downloads/TEST/talk/client/src/components/Shared/Modal/index.tsx":"19","/home/mmx/Downloads/TEST/talk/client/src/components/Shared/EditProfile/index.tsx":"20","/home/mmx/Downloads/TEST/talk/client/src/components/Side/Groups/index.tsx":"21","/home/mmx/Downloads/TEST/talk/client/src/components/Shared/CustomButton/index.tsx":"22","/home/mmx/Downloads/Chat-master/client/src/index.tsx":"23","/home/mmx/Downloads/Chat-master/client/src/redux/auth-reducer.ts":"24","/home/mmx/Downloads/Chat-master/client/src/redux/app-reducer.ts":"25","/home/mmx/Downloads/Chat-master/client/src/App.tsx":"26","/home/mmx/Downloads/Chat-master/client/src/views/AuthView/index.tsx":"27","/home/mmx/Downloads/Chat-master/client/src/views/AppView/index.tsx":"28","/home/mmx/Downloads/Chat-master/client/src/components/Auth/Welcome/index.tsx":"29","/home/mmx/Downloads/Chat-master/client/src/components/Auth/Signup/index.tsx":"30","/home/mmx/Downloads/Chat-master/client/src/components/Main/MsgInput/index.tsx":"31","/home/mmx/Downloads/Chat-master/client/src/components/Main/Messages/index.tsx":"32","/home/mmx/Downloads/Chat-master/client/src/components/Main/TopBar/index.tsx":"33","/home/mmx/Downloads/Chat-master/client/src/components/Side/Search/index.tsx":"34","/home/mmx/Downloads/Chat-master/client/src/components/Main/Onboard/index.tsx":"35","/home/mmx/Downloads/Chat-master/client/src/components/Auth/Login/index.tsx":"36","/home/mmx/Downloads/Chat-master/client/src/components/Side/BottomBar/index.tsx":"37","/home/mmx/Downloads/Chat-master/client/src/components/Side/TopBar/index.tsx":"38","/home/mmx/Downloads/Chat-master/client/src/components/Side/Members/index.tsx":"39","/home/mmx/Downloads/Chat-master/client/src/components/Side/GroupInfo/index.tsx":"40","/home/mmx/Downloads/Chat-master/client/src/components/Side/Groups/index.tsx":"41","/home/mmx/Downloads/Chat-master/client/src/components/Shared/EditProfile/index.tsx":"42","/home/mmx/Downloads/Chat-master/client/src/components/Shared/Modal/index.tsx":"43","/home/mmx/Downloads/Chat-master/client/src/components/Shared/CustomButton/index.tsx":"44"},{"size":586,"mtime":1610545764978,"results":"45","hashOfConfig":"46"},{"size":1150,"mtime":1610545764798,"results":"47","hashOfConfig":"46"},{"size":1412,"mtime":1610557521392,"results":"48","hashOfConfig":"46"},{"size":524,"mtime":1610748832252,"results":"49","hashOfConfig":"46"},{"size":1780,"mtime":1610545764830,"results":"50","hashOfConfig":"46"},{"size":10034,"mtime":1610550595599,"results":"51","hashOfConfig":"46"},{"size":1253,"mtime":1610551501065,"results":"52","hashOfConfig":"46"},{"size":1833,"mtime":1610798154833,"results":"53","hashOfConfig":"46"},{"size":5600,"mtime":1610552261351,"results":"54","hashOfConfig":"46"},{"size":1503,"mtime":1610545764762,"results":"55","hashOfConfig":"46"},{"size":654,"mtime":1610545764766,"results":"56","hashOfConfig":"46"},{"size":5088,"mtime":1610552355131,"results":"57","hashOfConfig":"46"},{"size":1406,"mtime":1610797842406,"results":"58","hashOfConfig":"46"},{"size":1076,"mtime":1610545764782,"results":"59","hashOfConfig":"46"},{"size":1093,"mtime":1610550448663,"results":"60","hashOfConfig":"46"},{"size":524,"mtime":1610545764774,"results":"61","hashOfConfig":"46"},{"size":1212,"mtime":1610545764782,"results":"62","hashOfConfig":"46"},{"size":1282,"mtime":1610800538007,"results":"63","hashOfConfig":"46"},{"size":2577,"mtime":1610545764770,"results":"64","hashOfConfig":"46"},{"size":4031,"mtime":1610800906359,"results":"65","hashOfConfig":"46"},{"size":1043,"mtime":1610545764778,"results":"66","hashOfConfig":"46"},{"size":746,"mtime":1610545764766,"results":"67","hashOfConfig":"46"},{"size":586,"mtime":1610801014000,"results":"68","hashOfConfig":"69"},{"size":1150,"mtime":1610801014000,"results":"70","hashOfConfig":"69"},{"size":1412,"mtime":1610801014000,"results":"71","hashOfConfig":"69"},{"size":524,"mtime":1610801014000,"results":"72","hashOfConfig":"69"},{"size":1780,"mtime":1610801014000,"results":"73","hashOfConfig":"69"},{"size":10034,"mtime":1610801014000,"results":"74","hashOfConfig":"69"},{"size":1253,"mtime":1610801014000,"results":"75","hashOfConfig":"69"},{"size":5600,"mtime":1610801014000,"results":"76","hashOfConfig":"69"},{"size":1503,"mtime":1610801014000,"results":"77","hashOfConfig":"69"},{"size":1833,"mtime":1610801014000,"results":"78","hashOfConfig":"69"},{"size":654,"mtime":1610801014000,"results":"79","hashOfConfig":"69"},{"size":1212,"mtime":1610801014000,"results":"80","hashOfConfig":"69"},{"size":1406,"mtime":1610801014000,"results":"81","hashOfConfig":"69"},{"size":5088,"mtime":1610801014000,"results":"82","hashOfConfig":"69"},{"size":1093,"mtime":1610801014000,"results":"83","hashOfConfig":"69"},{"size":1076,"mtime":1610801014000,"results":"84","hashOfConfig":"69"},{"size":1282,"mtime":1610801014000,"results":"85","hashOfConfig":"69"},{"size":524,"mtime":1610801014000,"results":"86","hashOfConfig":"69"},{"size":1043,"mtime":1610801014000,"results":"87","hashOfConfig":"69"},{"size":4031,"mtime":1610801014000,"results":"88","hashOfConfig":"69"},{"size":2577,"mtime":1610801014000,"results":"89","hashOfConfig":"69"},{"size":746,"mtime":1610801014000,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"bl847f",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"5zxxyp",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"144"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"144"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mmx/Downloads/TEST/talk/client/src/index.tsx",[],["187","188"],"/home/mmx/Downloads/TEST/talk/client/src/redux/auth-reducer.ts",[],"/home/mmx/Downloads/TEST/talk/client/src/redux/app-reducer.ts",[],"/home/mmx/Downloads/TEST/talk/client/src/App.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/views/AuthView/index.tsx",["189"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\n\n// Local Imports\nimport Welcome from '../../components/Auth/Welcome/index';\nimport Login from '../../components/Auth/Login/index';\nimport Signup from '../../components/Auth/Signup/index';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n});\n\ntype Props = {};\n\ntype UserData = {\n  id: string;\n  token: string;\n};\n\nconst AuthView: React.FC<Props> = props => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userData = localStorage.getItem('userData');\n    if (!userData) return;\n    const parsedData: UserData = JSON.parse(userData);\n    verifyRequest(parsedData.id, parsedData.token);\n  }, []);\n\n  // Async Requests\n  const verifyRequest = async (id: string, token: string) => {\n    let response;\n    try {\n      response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/users/verify`, {\n        id,\n        token\n      });\n    } catch (error) {\n      console.log('[ERROR][AUTH][VERIFY]: ', error);\n      return;\n    }\n    if (!response.data.access) {\n      localStorage.removeItem('userData');\n      return;\n    }\n    dispatch({ type: 'LOGIN', payload: { ...response.data.user } });\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Router>\n        <Switch>\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={Signup} />\n          <Route path=\"/\" exact component={Welcome} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AuthView;\n","/home/mmx/Downloads/TEST/talk/client/src/views/AppView/index.tsx",["190","191"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n// Local Imports\nimport Onboard from '../../components/Main/Onboard/index';\nimport Messages from '../../components/Main/Messages/index';\nimport MsgInput from '../../components/Main/MsgInput/index';\nimport MainTopBar from '../../components/Main/TopBar/index';\nimport SideTopBar from '../../components/Side/TopBar/index';\nimport BottomBar from '../../components/Side/BottomBar/index';\nimport Search from '../../components/Side/Search/index';\nimport Groups from '../../components/Side/Groups/index';\nimport GroupInfo from '../../components/Side/GroupInfo/index';\nimport Members from '../../components/Side/Members/index';\nimport Modal from '../../components/Shared/Modal/index';\nimport EditProfile from '../../components/Shared/EditProfile/index';\nimport styles from './styles.module.scss';\n\ntype GroupData = {\n  _id: string;\n  title: string;\n  description: string;\n  groupClick: () => void;\n};\n\ntype SnackData = {\n  open: boolean;\n  message: string | null;\n  severity: 'success' | 'error' | undefined;\n};\n\ninterface IRootState {\n  auth: {\n    isLogged: boolean;\n    id: string | null;\n    username: string | null;\n    image: string | null;\n    token: string | null;\n  };\n  app: {\n    inChannel: boolean;\n    currentGroup: GroupData;\n    displayedGroups: GroupData[];\n    messages: [];\n    members: [];\n    groups: [];\n    modal: null | 'bug' | 'edit' | 'create';\n  };\n}\n\nconst AppView: React.FC = () => {\n  const dispatch = useDispatch();\n  const userData = useSelector((state: IRootState) => state.auth);\n  const { inChannel, currentGroup, displayedGroups, messages, members, groups, modal } = useSelector(\n    (state: IRootState) => state.app\n  );\n\n  const [mobile, setMobile] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [snack, setSnack] = useState<SnackData>({ open: false, severity: undefined, message: null });\n  const [socket, setSocket] = useState<SocketIOClient.Socket | null>(null);\n\n  useEffect(() => {\n    const socket = socketIOClient(process.env.REACT_APP_SOCKET_URL!, { transports: ['websocket'] });\n    socket.emit('new user', userData.id);\n    socket.on('fetch messages', (id: string) => fetchMessages(id));\n    socket.on('fetch group', fetchGroups);\n    setSocket(socket);\n    fetchGroups();\n  }, []);\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.emit('join group', userData.id, currentGroup?._id);\n\n    fetchMessages();\n  }, [currentGroup]);\n\n  // Handlers\n  const logoutHandler = () => {\n    socket?.disconnect();\n    localStorage.removeItem('userData');\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const groupHandler = (id: string) => {\n    setLoading(true);\n    const current = groups.filter((item: GroupData) => item._id === id);\n    if (current.length > 0) {\n      dispatch({ type: 'CHANGE GROUP', payload: { currentGroup: current[0] } });\n    }\n  };\n\n  // Async Requests\n  const createGroup = async (title: string, description: string) => {\n    const { token, id } = userData;\n    if (!token) {\n      setSnack({ open: true, severity: 'error', message: `Guests are not allowed to create groups, please register.` });\n      return;\n    }\n\n    let verifiedToken;\n    try {\n      verifiedToken = await axios.post(`${process.env.REACT_APP_SERVER_URL}/users/verify`, {\n        id,\n        token\n      });\n    } catch (error) {\n      console.log('[ERROR][AUTH][VERIFY]: ', error);\n      return;\n    }\n    if (!verifiedToken.data.access) {\n      localStorage.removeItem('userData');\n      return;\n    }\n\n    let response;\n    try {\n      response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/groups`, {\n        title,\n        description: description ? description : 'No description.'\n      });\n    } catch (error) {\n      console.log('[ERROR][GROUPS][CREATE]: ', error);\n      setSnack({ open: true, severity: 'error', message: `An error occured: Could not create group.` });\n      return;\n    }\n    if (!response) return;\n    dispatch({ type: 'MODAL', payload: { modal: null } });\n    fetchGroups();\n    socket?.emit('create group', userData.id, title);\n    setSnack({ open: true, severity: 'success', message: `${title} channel created.` });\n  };\n\n  const editProfileRequest = async (username: string, image: string) => {\n    const { token, id } = userData;\n    if (!token) {\n      setSnack({ open: true, severity: 'error', message: `Guests are not allowed to edit profile, please register.` });\n      return;\n    }\n\n    let verifiedToken;\n    try {\n      verifiedToken = await axios.post(`${process.env.REACT_APP_SERVER_URL}/users/verify`, {\n        id,\n        token\n      });\n    } catch (error) {\n      console.log('[ERROR][AUTH][VERIFY]: ', error);\n      return;\n    }\n    if (!verifiedToken.data.access) {\n      localStorage.removeItem('userData');\n      return;\n    }\n\n    let response;\n    try {\n      response = await axios.put(`${process.env.REACT_APP_SERVER_URL}/users/edit`, {\n        id,\n        username,\n        image\n      });\n    } catch (error) {\n      console.log('[ERROR][USERS][EDIT]: ', error);\n      setSnack({ open: true, severity: 'error', message: `An error occured: Could not edit profile.` });\n      return;\n    }\n    if (!response) return;\n    setSnack({ open: true, severity: 'success', message: `Profile updated.` });\n    dispatch({ type: 'MODAL', payload: { modal: null } });\n    dispatch({ type: 'EDIT', payload: { username: response.data.user.username, image: response.data.user.image } });\n  };\n\n  const createMessage = async (text: string, date: string) => {\n    if (!socket) return;\n\n    let response;\n    try {\n      response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/messages`, {\n        gid: currentGroup?._id,\n        text,\n        username: userData.username,\n        image: userData.image,\n        uid: userData.id,\n        date\n      });\n    } catch (error) {\n      console.log('[ERROR][GROUPS][CREATE]: ', error);\n      setSnack({ open: true, severity: 'error', message: `An error occured: Could not send message.` });\n      return;\n    }\n    if (!response) return;\n    socket?.emit('message', userData.id, currentGroup?._id);\n  };\n\n  const fetchGroups = async () => {\n    let response;\n    try {\n      response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/groups`);\n    } catch (error) {\n      console.log('[ERROR][GROUPS][FETCH]: ', error);\n      setSnack({ open: true, severity: 'error', message: `An error occured: Could not fetch groups.` });\n      return;\n    }\n    if (!response) return;\n    dispatch({\n      type: 'FETCH GROUPS',\n      payload: { displayedGroups: response.data.groups, groups: response.data.groups }\n    });\n  };\n\n  const fetchMessages = async (gid = currentGroup?._id) => {\n    if (!gid) return;\n    let response;\n    try {\n      response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/groups/${gid}`);\n    } catch (error) {\n      console.log('[ERROR][MESSAGES][FETCH]: ', error);\n      setSnack({ open: true, severity: 'error', message: `An error occured: Could not fetch messages and members.` });\n      setLoading(false);\n      return;\n    }\n    setLoading(false);\n    if (response.data.error) {\n      setSnack({ open: true, severity: 'error', message: `An error occured: Could not fetch messages and members.` });\n      return;\n    }\n    dispatch({ type: 'FETCH MESSAGES', payload: { messages: response.data.messages, members: response.data.members } });\n  };\n\n \n\n  // Render\n  let sideContent;\n  let mainContent;\n\n  if (inChannel) {\n    sideContent = (\n      <div className={styles.sideContent}>\n        <GroupInfo currentGroup={currentGroup} />\n        <Members members={members} loading={loading} />\n      </div>\n    );\n    mainContent = (\n      <div className={styles.main}>\n        <MainTopBar title={currentGroup?.title} menuClick={() => setMobile(true)} />\n        <Messages messages={messages} onClick={() => setMobile(false)} loading={loading} />\n        <MsgInput sendClick={createMessage} onClick={() => setMobile(false)} />\n      </div>\n    );\n  } else {\n    sideContent = (\n      <div className={styles.sideContent}>\n        <Search\n          groups={groups}\n          update={filteredGroups => dispatch({ type: 'SEARCH', payload: { displayedGroups: filteredGroups } })}\n        />\n        <Groups groups={displayedGroups} groupClick={id => groupHandler(id)} />\n      </div>\n    );\n    mainContent = (\n      <div className={styles.main}>\n        <MainTopBar title=\"\" menuClick={() => setMobile(true)} />\n        <Onboard onClick={() => setMobile(false)} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={mobile ? styles.mobile : styles.side}>\n        <SideTopBar\n          inChannel={inChannel}\n          arrowClick={() => {\n            dispatch({ type: 'EXIT' });\n          }}\n          plusClick={() => {\n            dispatch({ type: 'MODAL', payload: { modal: 'create' } });\n            setMobile(false);\n          }}\n        />\n        {sideContent}\n        <BottomBar\n          exitClick={logoutHandler}\n          profileClick={() => {\n            dispatch({ type: 'MODAL', payload: { modal: 'edit' } });\n            setMobile(false);\n          }}\n        />\n      </div>\n      {mainContent}\n      {modal === 'create' && <Modal onCreate={createGroup} title=\"New Channel\" />}\n      {modal === 'edit' && <EditProfile onEdit={editProfileRequest} />}\n      <Snackbar\n        open={snack.open}\n        onClose={() => setSnack({ open: false, severity: snack.severity, message: null })}\n        autoHideDuration={5000}\n      >\n        <MuiAlert\n          variant=\"filled\"\n          onClose={() => setSnack({ open: false, severity: snack.severity, message: null })}\n          severity={snack.severity}\n        >\n          {snack.message}\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default AppView;\n","/home/mmx/Downloads/TEST/talk/client/src/components/Auth/Welcome/index.tsx",["192"],"import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\n// Local Imports\nimport logo from '../../../assets/cropped.png';\nimport CustomButton from '../../Shared/CustomButton/index';\nimport styles from './styles.module.scss';\n\ntype Props = {};\n\nconst Welcome: React.FC<Props> = props => {\n  const dispatch = useDispatch();\n\n  // Async Requests\n  const guestRequest = async () => {\n    let response;\n    try {\n      response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/users/guest`);\n    } catch (error) {\n      console.log('[ERROR][AUTH][GUEST]: ', error);\n      return;\n    }\n    if (!response.data.access) return;\n    dispatch({ type: 'GUEST', payload: { ...response.data.user } });\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1>Welcome</h1>\n      <Link to=\"/login\">\n        <CustomButton onClick={() => {}} isPurple={false} title=\"Login\" small={false} />\n      </Link>\n      <Link to=\"/signup\">\n        <CustomButton onClick={() => {}} isPurple={true} title=\"Signup\" small={false} />\n      </Link>\n      <p className={styles.guest} onClick={guestRequest}>\n        Continue as guest\n      </p>\n    </div>\n  );\n};\n\nexport default Welcome;\n","/home/mmx/Downloads/TEST/talk/client/src/components/Main/Messages/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Auth/Signup/index.tsx",["193"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Snackbar,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Local Imports\nimport logo from \"../../../assets/gc-logo-symbol-nobg.png\";\nimport CustomButton from \"../../Shared/CustomButton/index\";\nimport styles from \"./styles.module.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ntype Props = {};\n\ntype SnackData = {\n  open: boolean;\n  message: string | null;\n};\n\nconst Signup: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [snack, setSnack] = useState<SnackData>({ open: false, message: null });\n\n  // Async Requests\n  const signupSubmit = async (\n    checked: boolean,\n    email: string,\n    password: string,\n    username: string\n  ) => {\n    setIsLoading(true);\n    let response;\n    try {\n      response = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/users/signup`,\n        {\n          checked,\n          email: email.toLowerCase(),\n          password: password.toLowerCase(),\n          username,\n        }\n      );\n    } catch (error) {\n      console.log(\"[ERROR][AUTH][SIGNUP]: \", error);\n      setIsLoading(false);\n      return;\n    }\n    if (!response.data.access) {\n      setSnack({ open: true, message: response.data.message });\n      setIsLoading(false);\n      return;\n    }\n    if (checked) {\n      localStorage.setItem(\n        \"userData\",\n        JSON.stringify({\n          id: response.data.user.id,\n          token: response.data.user.token,\n        })\n      );\n    }\n    dispatch({ type: \"LOGIN\", payload: { ...response.data.user } });\n    history.push(\"\");\n    setIsLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      username: Yup.string()\n        .min(2, \"Must be 2 characters at least\")\n        .required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string()\n        .min(6, \"Must be 6 characters at least\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) =>\n      signupSubmit(checked, values.email, values.password, values.username),\n  });\n\n  return (\n    <div className={styles.container}>\n      <Link to=\"/\">\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n      </Link>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign up\n      </Typography>\n      <form className={styles.form}>\n        <TextField\n          className={styles.input}\n          id=\"username\"\n          label=\"Username\"\n          variant=\"outlined\"\n          helperText={formik.touched.username && formik.errors.username}\n          error={formik.touched.username && !!formik.errors.username}\n          {...formik.getFieldProps(\"username\")}\n        />\n        <TextField\n          className={styles.input}\n          id=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          helperText={formik.touched.email && formik.errors.email}\n          error={formik.touched.email && !!formik.errors.email}\n          {...formik.getFieldProps(\"email\")}\n        />\n        <TextField\n          className={styles.input}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          helperText={formik.touched.password && formik.errors.password}\n          error={formik.touched.password && !!formik.errors.password}\n          {...formik.getFieldProps(\"password\")}\n        />\n        <FormControlLabel\n          className={styles.check}\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={() => setChecked((prev) => !prev)}\n              name=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Remember me\"\n        />\n        <CustomButton\n          type=\"submit\"\n          onClick={formik.handleSubmit}\n          isPurple\n          title=\"Signup\"\n          small={false}\n        />\n      </form>\n      <Link to=\"/login\">\n        <p className={styles.guest}>Already a member ? Login</p>\n      </Link>\n      {isLoading && <CircularProgress />}\n      <Snackbar\n        open={snack.open}\n        onClose={() => setSnack({ open: false, message: null })}\n        autoHideDuration={5000}\n      >\n        <MuiAlert\n          variant=\"filled\"\n          onClose={() => setSnack({ open: false, message: null })}\n          severity=\"error\"\n        >\n          {snack.message}\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Signup;\n","/home/mmx/Downloads/TEST/talk/client/src/components/Main/MsgInput/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Main/TopBar/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Auth/Login/index.tsx",["194"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Snackbar,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Local Imports\nimport logo from \"../../../assets/gc-logo-symbol-nobg.png\";\nimport CustomButton from \"../../Shared/CustomButton/index\";\nimport styles from \"./styles.module.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\ntype Props = {};\n\ntype SnackData = {\n  open: boolean;\n  message: string | null;\n};\n\nconst Login: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [snack, setSnack] = useState<SnackData>({ open: false, message: null });\n\n  // Async Requests\n  const loginSubmit = async (\n    checked: boolean,\n    email: string,\n    password: string\n  ) => {\n    setIsLoading(true);\n    let response;\n    try {\n      response = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/users/login`,\n        {\n          checked,\n          email: email.toLowerCase(),\n          password: password.toLowerCase(),\n        }\n      );\n    } catch (error) {\n      console.log(\"[ERROR][AUTH][LOGIN]: \", error);\n      setIsLoading(false);\n      return;\n    }\n    if (!response.data.access) {\n      setSnack({ open: true, message: response.data.message });\n      setIsLoading(false);\n      return;\n    }\n    if (checked) {\n      localStorage.setItem(\n        \"userData\",\n        JSON.stringify({\n          id: response.data.user.id,\n          token: response.data.user.token,\n        })\n      );\n    }\n    dispatch({ type: \"LOGIN\", payload: { ...response.data.user } });\n    history.push(\"\");\n    setIsLoading(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string()\n        .min(6, \"Must be 6 characters at least\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => loginSubmit(checked, values.email, values.password),\n  });\n\n  return (\n    <div className={styles.container}>\n      <Link to=\"/\">\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n      </Link>\n      <Typography component=\"h1\" variant=\"h5\">\n        Login\n      </Typography>\n      <form className={styles.form}>\n        <TextField\n          className={styles.input}\n          id=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"text\"\n          helperText={formik.touched.email && formik.errors.email}\n          error={formik.touched.email && !!formik.errors.email}\n          {...formik.getFieldProps(\"email\")}\n        />\n        <TextField\n          className={styles.input}\n          id=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          {...formik.getFieldProps(\"password\")}\n          helperText={formik.touched.password && formik.errors.password}\n          error={formik.touched.password && !!formik.errors.password}\n        />\n        <FormControlLabel\n          className={styles.check}\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={() => setChecked((prev) => !prev)}\n              name=\"checked\"\n              color=\"primary\"\n            />\n          }\n          label=\"Remember me\"\n        />\n        <CustomButton\n          type=\"submit\"\n          onClick={formik.handleSubmit}\n          isPurple\n          title=\"Login\"\n          small={false}\n        />\n      </form>\n      <Link to=\"/signup\">\n        <p className={styles.guest}>Don't have an account? Sign Up</p>\n      </Link>\n      {isLoading && <CircularProgress />}\n      <Snackbar\n        open={snack.open}\n        onClose={() => setSnack({ open: false, message: null })}\n        autoHideDuration={5000}\n      >\n        <MuiAlert\n          variant=\"filled\"\n          onClose={() => setSnack({ open: false, message: null })}\n          severity=\"error\"\n        >\n          {snack.message}\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/mmx/Downloads/TEST/talk/client/src/components/Main/Onboard/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Side/TopBar/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Side/BottomBar/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Side/GroupInfo/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Side/Search/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Side/Members/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Shared/Modal/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Shared/EditProfile/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Side/Groups/index.tsx",[],"/home/mmx/Downloads/TEST/talk/client/src/components/Shared/CustomButton/index.tsx",[],["195","196"],"/home/mmx/Downloads/Chat-master/client/src/index.tsx",[],["197","198"],"/home/mmx/Downloads/Chat-master/client/src/redux/auth-reducer.ts",[],"/home/mmx/Downloads/Chat-master/client/src/redux/app-reducer.ts",[],"/home/mmx/Downloads/Chat-master/client/src/App.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/views/AuthView/index.tsx",["199"],"/home/mmx/Downloads/Chat-master/client/src/views/AppView/index.tsx",["200","201"],"/home/mmx/Downloads/Chat-master/client/src/components/Auth/Welcome/index.tsx",["202"],"/home/mmx/Downloads/Chat-master/client/src/components/Auth/Signup/index.tsx",["203"],"/home/mmx/Downloads/Chat-master/client/src/components/Main/MsgInput/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Main/Messages/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Main/TopBar/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Side/Search/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Main/Onboard/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Auth/Login/index.tsx",["204"],"/home/mmx/Downloads/Chat-master/client/src/components/Side/BottomBar/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Side/TopBar/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Side/Members/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Side/GroupInfo/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Side/Groups/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Shared/EditProfile/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Shared/Modal/index.tsx",[],"/home/mmx/Downloads/Chat-master/client/src/components/Shared/CustomButton/index.tsx",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":33,"column":6,"nodeType":"211","endLine":33,"endColumn":8,"suggestions":"212"},{"ruleId":"209","severity":1,"message":"213","line":74,"column":6,"nodeType":"211","endLine":74,"endColumn":8,"suggestions":"214"},{"ruleId":"209","severity":1,"message":"215","line":81,"column":6,"nodeType":"211","endLine":81,"endColumn":20,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":7,"column":8,"nodeType":"219","messageId":"220","endLine":7,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":23,"column":8,"nodeType":"219","messageId":"220","endLine":23,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":23,"column":8,"nodeType":"219","messageId":"220","endLine":23,"endColumn":12},{"ruleId":"205","replacedBy":"221"},{"ruleId":"207","replacedBy":"222"},{"ruleId":"205","replacedBy":"223"},{"ruleId":"207","replacedBy":"224"},{"ruleId":"209","severity":1,"message":"210","line":33,"column":6,"nodeType":"211","endLine":33,"endColumn":8,"suggestions":"225"},{"ruleId":"209","severity":1,"message":"213","line":74,"column":6,"nodeType":"211","endLine":74,"endColumn":8,"suggestions":"226"},{"ruleId":"209","severity":1,"message":"215","line":81,"column":6,"nodeType":"211","endLine":81,"endColumn":20,"suggestions":"227"},{"ruleId":"217","severity":1,"message":"218","line":7,"column":8,"nodeType":"219","messageId":"220","endLine":7,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":23,"column":8,"nodeType":"219","messageId":"220","endLine":23,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":23,"column":8,"nodeType":"219","messageId":"220","endLine":23,"endColumn":12},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyRequest'. Either include it or remove the dependency array.","ArrayExpression",["230"],"React Hook useEffect has missing dependencies: 'fetchGroups', 'fetchMessages', and 'userData.id'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'fetchMessages', 'socket', and 'userData.id'. Either include them or remove the dependency array.",["232"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["228"],["229"],["228"],["229"],["233"],["234"],["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"236","fix":"242"},{"desc":"238","fix":"243"},{"desc":"240","fix":"244"},"Update the dependencies array to be: [verifyRequest]",{"range":"245","text":"246"},"Update the dependencies array to be: [fetchGroups, fetchMessages, userData.id]",{"range":"247","text":"248"},"Update the dependencies array to be: [currentGroup, fetchMessages, socket, userData.id]",{"range":"249","text":"250"},{"range":"251","text":"246"},{"range":"252","text":"248"},{"range":"253","text":"250"},[900,902],"[verifyRequest]",[2521,2523],"[fetchGroups, fetchMessages, userData.id]",[2662,2676],"[currentGroup, fetchMessages, socket, userData.id]",[900,902],[2521,2523],[2662,2676]]